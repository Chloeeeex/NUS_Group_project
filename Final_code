import {update_scale, create_sprite, update_position, create_text, 
update_text, input_left_mouse_down, pointer_over_gameobject, 
update_to_top, update_loop, input_right_mouse_down, build_game, 
update_color, loop_audio, create_audio, play_audio, stop_audio} 
from "arcade_2d";


const icon1_c = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_1_close.jpg"),[0.1,0.1]);
const icon1_o = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_1_open.jpg"),[0.1,0.1]);
const icon2_c = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_2_close.jpg"),[0.1,0.1]);
const icon2_o = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_2_open.jpg"),[0.1,0.1]);
const icon3_c = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_3_close.jpg"),[0.1,0.1]);
const icon3_o = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_3_open.jpg"),[0.1,0.1]);
const icon4_c = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_4_close.jpg"),[0.1,0.1]);
const icon4_o = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_4_open.jpg"),[0.1,0.1]);
const icon5_c = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_5_close.jpg"),[0.1,0.1]);
const icon5_o = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/b_box_5_open.jpg"),[0.1,0.1]);
const icon6_c = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/melody_1_close.jpg"),[0.1,0.1]);
const icon6_o = update_scale(create_sprite("https://raw.githubusercontent.com/Chloeeeex/NUS_Group_project/main/icon/melody_1_open.jpg"),[0.1,0.1]);

const audio1 = create_audio("https://labs.phaser.io/assets/audio/SoundEffects/alien_death1.wav", 1);
const audio2 = create_audio("https://labs.phaser.io/assets/audio/SoundEffects/key.wav", 1);
const audio3 = create_audio("https://labs.phaser.io/assets/audio/SoundEffects/escape.wav", 1);
const audio4 = create_audio("https://labs.phaser.io/assets/audio/SoundEffects/pickup.wav", 1);
const audio5 = create_audio("https://labs.phaser.io/assets/audio/SoundEffects/battery.wav", 1);
const audio6 = create_audio("https://labs.phaser.io/assets/audio/SoundEffects/pusher.wav", 1);

const icon_open_object = [
  pair(icon1_o, [150, 200]),
  pair(icon2_o, [300, 200]),
  pair(icon3_o, [450, 200]),
  pair(icon4_o, [150, 450]),
  pair(icon5_o, [300, 450]),
  pair(icon6_o, [450, 450])
  ];

const icon_close_object = [
  pair(icon1_c, [150, 200]),
  pair(icon2_c, [300, 200]),
  pair(icon3_c, [450, 200]),
  pair(icon4_c, [150, 450]),
  pair(icon5_c, [300, 450]),
  pair(icon6_c, [450, 450])
  ];
//play_audio(loop_audio(audio1));

const audio = [
    loop_audio(audio1),
    loop_audio(audio2),
    loop_audio(audio3),
    loop_audio(audio4),
    loop_audio(audio5),
    loop_audio(audio6)
    ];
    
//play_audio(audio[1]);
    
// 设置标题
for(let i = 0; i < 6; i = i + 1){
    update_position(head(icon_close_object[i]), tail(icon_close_object[i]));
}

const textobjects = [
    update_position(update_scale(create_text('RHYTHM BOX'),[2.5,2.5]),[300,50]),
    update_position(create_text('start'),[150,300]),
    update_position(create_text('start'),[300,300]),
    update_position(create_text('start'),[450,300]),
    update_position(create_text('start'),[150,550]),
    update_position(create_text('start'),[300,550]),
    update_position(create_text('start'),[450,550])
    ];
    


update_loop(game_state => {
    for (let i = 0; i < 7; i = i + 1) {
        if (input_left_mouse_down() && pointer_over_gameobject(textobjects[i]) ) {
            
            update_to_top(update_position(head(icon_open_object[i-1]), tail(icon_close_object[i-1])));
            update_to_top(update_text(update_color(textobjects[i], [255, 0, 0, 255]),'stop'));
            
            play_audio(audio[i - 1]);
      }
      
      else if(input_right_mouse_down() && pointer_over_gameobject(textobjects[i])){
          
          update_to_top(update_position(head(icon_close_object[i-1]), tail(icon_close_object[i-1])));
          update_to_top(update_text(update_color(textobjects[i], [255, 255, 255, 255]),'start'));
          
            stop_audio(audio[i - 1]);
      }
      
      
  }
});
build_game();
